name: CI workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test default scheme
    runs-on: macos-latest
    # runs-on: self-hosted
    
    strategy:
      matrix:
#        destination: ['platform=iOS Simulator,OS=13.7,name=iPhone 11','platform=macOS']
         destination: ['platform=iOS Simulator,OS=14.0,name=iPhone 11']

    steps:
      - name: Print github action secrets
        run: |
          if [ $TEST_PASSWORD_1 == "gonnai" ]; then echo 'You are gonnai';
          else echo 'Who r u bro?' fi
        env: 
          TEST_PASSWORD_1: ${{ secrets.TEST_PASSWORD_1 }}

      # - name: Checkout
      #   uses: actions/checkout@v2
        
      # - name: Set Default Scheme
      #   run: |
      #     scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #     default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #     echo $default | cat >default
      #     echo Using default scheme: $default
          
      # - name: Build
      #   env:
      #     scheme: ${{ 'default' }}
      #   run: |
      #     if [ $scheme = default ]; then scheme=$(cat default); fi
      #     if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "$destination"
      #     if [ $? == 0 ]; then echo "Build suceeded"
      #     else echo "Build failed" fi
          
      # - name: Test
      #   env:
      #     scheme: ${{ 'default' }}
      #   run: |
      #     if [ $scheme = default ]; then scheme=$(cat default); fi
      #     if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "$destination"
      #     if [ $? == 0 ]; then echo "Test suceeded"
      #     else echo "Test failed" fi
